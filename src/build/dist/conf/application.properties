#spring.profiles.active= dev
spring.profiles.active=prod
# ------------------------------------------------------------------------------------------------
# Web application server configuration
# ----------------- -------------------------------------------------------------------------------
application.version=${filter.application.version}
server.port=${filter.server.port}
server.compression.enabled=${filter.server.compression.enabled}
server.compression.mime-types=${filter.server.compression.mime-types}
server.cors.pattern.urls=${filter.server.cors.pattern.urls}
# ------------------------------------------------------------------------------------------------
# Tool configuration
# ------------------------------------------------------------------------------------------------
tool.swagger.enabled=${filter.tool.swagger.enabled}
tool.swagger.api.title=${filter.tool.swagger.api.title} 
tool.swagger.api.description=${filter.tool.swagger.api.description}
tool.swagger.api.version=${filter.tool.swagger.api.version}
tool.swagger.api.terms-of-services-use=${filter.tool.swagger.api.terms-of-services-use}
tool.swagger.api.contact.name=${filter.tool.swagger.api.contact.name}
tool.swagger.api.contact.url=${filter.tool.swagger.api.contact.url}
tool.swagger.api.contact.email=${filter.tool.swagger.api.contact.email}
tool.swagger.api.licence=${filter.tool.swagger.api.licence}
tool.swagger.api.licence.url=${filter.tool.swagger.api.licence.url}

spring.mvc.throw-exception-if-no-handler-found=${filter.spring.mvc.throw-exception-if-no-handler-found}
#spring.resources.add-mappings=false
# ------------------------------------------------------------------------------------------------
# JWT download configuration
# ------------------------------------------------------------------------------------------------
#key to generate and validate token
security.jwt.secret.path=${filter.security.jwt.secret.path}
security.jwt.secret.alias=${filter.security.jwt.secret.alias}
security.jwt.secret.storepass=${filter.security.jwt.secret.storepass}
security.jwt.secret.keypass=${filter.security.jwt.secret.keypass}

#Number max of download per recipient
enclosure.max.download=${filter.enclosure.max.download}
#number of days to expire
enclosure.expire.days=${filter.enclosure.expire.days}
#bucket name prefix
bucket.prefix=${filter.bucket.prefix}
